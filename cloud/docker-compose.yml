version: '3'

services:
  db:
    image: mariadb:10.6
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    restart: always
    volumes:
      - db:/var/lib/mysql:Z
    environment:
      - MYSQL_ROOT_PASSWORD=nextcloud
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_DISABLE_UPGRADE_BACKUP=1
    env_file:
      - db.env
    networks:
      - nextcloud

  redis:
    image: redis:alpine
    restart: always
    networks:
      - nextcloud

  app:
    image: nextcloud:apache
    restart: always
    volumes:
      - nextcloud:/var/www/html:z
      - ${USERHOME}/photos:/mnt/photos:z
      - ${USERHOME}/storage:/storage:rw
    environment:
      - MYSQL_HOST=db
      - REDIS_HOST=redis
    env_file:
      - db.env
    depends_on:
      - db
      - redis
    networks:
      - nextcloud
      - docker-home-net
    labels:
      # Enable cloud handler entrypoint on http.
      - "traefik.http.routers.cloud-http.entrypoints=web"
      # Define cloud handler http host.
      - "traefik.http.routers.cloud-http.rule=Host(`cloud.${DOCKER_BASE_URL}`)"
      # Define http middleware and redirection to https.
      # - "traefik.http.routers.cloud-http.middlewares=cloud-https"
      # - "traefik.http.middlewares.cloud-https.redirectscheme.scheme=https"
      # # Enable cloud handler entrypoint on https.
      # - "traefik.http.routers.cloud.entrypoints=websecure"
      # # Define cloud handler host.
      # - "traefik.http.routers._cloud.rule=Host(`cloud.${DOCKER_BASE_URL}`)"
      # # Instructs cloud that the current router is dedicated to HTTPS requests only.
      # - "traefik.http.routers._cloud.tls=true"
      # Define on which network Traefik is operating.
      - "traefik.docker.network=docker-home-net"

  cron:
    image: nextcloud:apache
    restart: always
    volumes:
      - nextcloud:/var/www/html:z
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis
    networks:
      - nextcloud

  duplicati:
    image: lscr.io/linuxserver/duplicati:latest
    container_name: duplicati
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - CLI_ARGS= #optional
    volumes:
      - ${USERHOME}/server/duplicati/:/config
      - ${USERHOME}/storage:/storage:z
      - ${USERHOME}/files:/files:z
      - ${USERHOME}/server:/server
    # ports:
    #   - 8200:8200
    networks:
      - docker-home-net
    restart: unless-stopped
    labels:
      # Enable duplicati handler entrypoint on http.
      - "traefik.http.routers.duplicati-http.entrypoints=web"
      # Define duplicati handler http host.
      - "traefik.http.routers.duplicati-http.rule=Host(`bak.${DOCKER_BASE_URL}`)"
      # Define http middleware and redirection to https.
      - "traefik.http.routers.duplicati-http.middlewares=duplicati-https"
      - "traefik.http.middlewares.duplicati-https.redirectscheme.scheme=https"
      # Enable duplicati handler entrypoint on https.
      - "traefik.http.routers.duplicati.entrypoints=websecure"
      # Define duplicati handler host.
      - "traefik.http.routers.duplicati.rule=Host(`bak.${DOCKER_BASE_URL}`)"
      # Instructs duplicati that the current router is dedicated to HTTPS requests only.
      - "traefik.http.routers.duplicati.tls=true"
      # Define on which network Traefik is operating.
      - "traefik.docker.network=docker-home-net"
      - "traefik.http.services.duplicati.loadbalancer.server.port=8200"

  samba:
    image: crazymax/samba
    network_mode: host
    volumes:
      - ${USERHOME}/server/samba/:/data
      - ${USERHOME}/files:/samba/files
      - ${USERHOME}/box:/samba/box
      - ${USERHOME}/storage/public:/samba/public
    environment:
      - TZ=${TIMEZONE}
      - SAMBA_LOG_LEVEL=0
      - BROWSABLE=yes
    restart: unless-stopped
    labels:
       - "traefik.enable=false"

  rclone_rclone:
    image: rclone/rclone
    container_name: rclone_rclone
    network_mode: host
    restart: always
    command: rcd --rc-web-gui --rc-addr :5572 --rc-user uelei --rc-pass ${WEBPASSWORD}
    # ports:
    #   - "5572:5572"
    volumes:
      - ${USERHOME}/server/rclone/:/config/rclone
      - ${USERHOME}/files:/data/files:z
      - ${USERHOME}/box:/data/box:z
    environment:
      - PHP_TZ=${TIMEZONE}
      - PUID=1000
      - PGID=1000

networks:
  nextcloud:
  docker-home-net:
    external: true

volumes:
  db:
  nextcloud:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${USERHOME}/server/nextcloud/config/
  photos:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${USERHOME}/photos/
